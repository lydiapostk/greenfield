/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/startups/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Startups */
        get: operations["list_startups_startups__get"];
        put?: never;
        post?: never;
        /** Delete Item */
        delete: operations["delete_item_startups__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/startups/by_id/{startup_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Startup By Id */
        get: operations["get_startup_by_id_startups_by_id__startup_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/startups/by_website": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Startup By Website */
        get: operations["get_startup_by_website_startups_by_website_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/startups/{startup_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Update Startup By Id */
        put: operations["update_startup_by_id_startups__startup_id__put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/workstreams/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Workstreams */
        get: operations["list_workstreams_workstreams__get"];
        put?: never;
        /** Create Workstream */
        post: operations["create_workstream_workstreams__post"];
        /** Delete Workstream */
        delete: operations["delete_workstream_workstreams__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/workstreams/{workstream_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Workstream */
        get: operations["get_workstream_workstreams__workstream_id__get"];
        /** Update Workstream */
        put: operations["update_workstream_workstreams__workstream_id__put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/evaluations/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Evaluations */
        get: operations["list_evaluations_evaluations__get"];
        put?: never;
        /** Create Evaluation */
        post: operations["create_evaluation_evaluations__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/evaluations/{workstream_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create Evaluations Bulk */
        post: operations["create_evaluations_bulk_evaluations__workstream_id__post"];
        /** Delete Evaluations Bulk */
        delete: operations["delete_evaluations_bulk_evaluations__workstream_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/evaluations/{workstream_id}/{startup_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Upsert Evaluations */
        put: operations["upsert_evaluations_evaluations__workstream_id___startup_id__put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/lookup/check_url": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Check Url
         * @description Validate URL, prefer root domain but fallback to www if needed.
         */
        get: operations["check_url_lookup_check_url_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/lookup/query_llm": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Lookup Startup */
        get: operations["lookup_startup_lookup_query_llm_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/analyse/suggest/from_use_case": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Suggest From Use Case */
        get: operations["suggest_from_use_case_analyse_suggest_from_use_case_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** CheckDomainResponse */
        CheckDomainResponse: {
            /** Exists */
            exists: boolean;
            /** Normalized */
            normalized?: string | null;
            /** Error */
            error?: string | null;
            /** Note */
            note?: string | null;
            /** Hostname */
            hostname?: string | null;
        };
        /** CompetitorInfo */
        CompetitorInfo: {
            /** Description */
            description: string;
            /**
             * Url
             * Format: uri
             */
            url: string;
        };
        /**
         * Competitors
         * @description List of {competitor name: {description, url}} objects
         */
        Competitors: {
            [key: string]: components["schemas"]["CompetitorInfo"];
        }[];
        /** EvaluationReadWithStartup */
        EvaluationReadWithStartup: {
            /** Competitive Advantage */
            competitive_advantage?: string | null;
            /** Risks */
            risks?: string | null;
            /** Collaboration Potential */
            collaboration_potential?: string | null;
            startup: components["schemas"]["StartupReadLite"];
        };
        /** EvaluationReadWithStartupLite */
        EvaluationReadWithStartupLite: {
            /** Competitive Advantage */
            competitive_advantage?: string | null;
            /** Risks */
            risks?: string | null;
            /** Collaboration Potential */
            collaboration_potential?: string | null;
            startup: components["schemas"]["StartupLite"];
        };
        /** EvaluationReadWithWorkstreamLite */
        EvaluationReadWithWorkstreamLite: {
            /** Competitive Advantage */
            competitive_advantage?: string | null;
            /** Risks */
            risks?: string | null;
            /** Collaboration Potential */
            collaboration_potential?: string | null;
            workstream: components["schemas"]["WorkstreamLite"];
        };
        /**
         * Founders
         * @description Map of founder name -> website URL
         */
        Founders: {
            [key: string]: string | null;
        };
        /**
         * FundingStageEnum
         * @enum {string}
         */
        FundingStageEnum: "Conceptual" | "Pre-seed" | "Seed" | "Series A" | "Series B" | "Series C" | "Series D";
        /**
         * FundsRaisedEnum
         * @enum {string}
         */
        FundsRaisedEnum: "<$500K" | "$500K-$1M" | "$1M-$5M" | "$5M-$10M" | ">$10M";
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /**
         * NumEmployeesEnum
         * @enum {string}
         */
        NumEmployeesEnum: "1-10" | "11-50" | "51-100" | "101-1000" | ">1000";
        /** Startup */
        Startup: {
            /** Company Name */
            company_name?: string | null;
            /** Company Website */
            company_website?: string | null;
            /** Year Founded */
            year_founded?: string | null;
            /** Country */
            country?: string | null;
            num_employees?: components["schemas"]["NumEmployeesEnum"] | null;
            founders?: components["schemas"]["Founders"] | null;
            /** Investors */
            investors?: string[] | null;
            funding_stage?: components["schemas"]["FundingStageEnum"] | null;
            funds_raised?: components["schemas"]["FundsRaisedEnum"] | null;
            /** Ref Funding */
            ref_funding?: string[] | null;
            /** Tech Offering */
            tech_offering?: string | null;
            /** Ref Tech */
            ref_tech?: string[] | null;
            /** Tech Embedding */
            tech_embedding?: number[] | null;
            /** Uvp */
            uvp?: string | null;
            /** Ref Uvp */
            ref_uvp?: string[] | null;
            /** Uvp Embedding */
            uvp_embedding?: number[] | null;
            trl?: components["schemas"]["TrlEnum"] | null;
            /** Trl Explanation */
            trl_explanation?: string | null;
            competitors?: components["schemas"]["Competitors"] | null;
            /** Use Cases */
            use_cases?: string[] | null;
            /** Id */
            id?: number | null;
        };
        /** StartupLite */
        StartupLite: {
            /** Id */
            id: number;
            /** Company Name */
            company_name: string;
            /** Country */
            country?: string | null;
            /** Company Website */
            company_website: string | null;
            founders?: components["schemas"]["Founders"] | null;
        };
        /** StartupReadLite */
        StartupReadLite: {
            /** Company Name */
            company_name?: string | null;
            /** Company Website */
            company_website?: string | null;
            /** Year Founded */
            year_founded?: string | null;
            /** Country */
            country?: string | null;
            num_employees?: components["schemas"]["NumEmployeesEnum"] | null;
            founders?: components["schemas"]["Founders"] | null;
            /** Investors */
            investors?: string[] | null;
            funding_stage?: components["schemas"]["FundingStageEnum"] | null;
            funds_raised?: components["schemas"]["FundsRaisedEnum"] | null;
            /** Ref Funding */
            ref_funding?: string[] | null;
            /** Tech Offering */
            tech_offering?: string | null;
            /** Ref Tech */
            ref_tech?: string[] | null;
            /** Tech Embedding */
            tech_embedding?: number[] | null;
            /** Uvp */
            uvp?: string | null;
            /** Ref Uvp */
            ref_uvp?: string[] | null;
            /** Uvp Embedding */
            uvp_embedding?: number[] | null;
            trl?: components["schemas"]["TrlEnum"] | null;
            /** Trl Explanation */
            trl_explanation?: string | null;
            competitors?: components["schemas"]["Competitors"] | null;
            /** Use Cases */
            use_cases?: string[] | null;
            /** Id */
            id: number;
            /**
             * Evaluations
             * @default []
             */
            evaluations: components["schemas"]["EvaluationReadWithWorkstreamLite"][];
        };
        /** StartupUpsert */
        StartupUpsert: {
            /** Company Name */
            company_name?: string | null;
            /** Company Website */
            company_website?: string | null;
            /** Year Founded */
            year_founded?: string | null;
            /** Country */
            country?: string | null;
            num_employees?: components["schemas"]["NumEmployeesEnum"] | null;
            founders?: components["schemas"]["Founders"] | null;
            /** Investors */
            investors?: string[] | null;
            funding_stage?: components["schemas"]["FundingStageEnum"] | null;
            funds_raised?: components["schemas"]["FundsRaisedEnum"] | null;
            /** Ref Funding */
            ref_funding?: string[] | null;
            /** Tech Offering */
            tech_offering?: string | null;
            /** Ref Tech */
            ref_tech?: string[] | null;
            /** Tech Embedding */
            tech_embedding?: number[] | null;
            /** Uvp */
            uvp?: string | null;
            /** Ref Uvp */
            ref_uvp?: string[] | null;
            /** Uvp Embedding */
            uvp_embedding?: number[] | null;
            trl?: components["schemas"]["TrlEnum"] | null;
            /** Trl Explanation */
            trl_explanation?: string | null;
            competitors?: components["schemas"]["Competitors"] | null;
            /** Use Cases */
            use_cases?: string[] | null;
        };
        /** SuggestWorkstreamResponse */
        SuggestWorkstreamResponse: {
            /** Use Case */
            use_case?: string | null;
            /** Challenge */
            challenge?: string | null;
            /** Technologies */
            technologies?: string[] | null;
            /** Overall Recommendation */
            overall_recommendation?: string | null;
        };
        /**
         * TrlEnum
         * @enum {string}
         */
        TrlEnum: "TRL 1-4" | "TRL 5-7" | "TRL 8-9";
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
        /** WorkstreamLite */
        WorkstreamLite: {
            /** Id */
            id: number;
            /**
             * Create Date
             * Format: date
             */
            create_date: string;
            /** Title */
            title: string | null;
        };
        /** WorkstreamRead */
        WorkstreamRead: {
            /**
             * Title
             * @default Untitled
             */
            title: string;
            /** Use Case */
            use_case?: string | null;
            /** Challenge */
            challenge?: string | null;
            /** Technologies */
            technologies?: string[] | null;
            /** Overall Recommendation */
            overall_recommendation?: string | null;
            /** Id */
            id: number;
            /**
             * Create Date
             * Format: date
             */
            create_date: string;
            /**
             * Evaluations
             * @default []
             */
            evaluations: components["schemas"]["EvaluationReadWithStartup"][];
        };
        /** WorkstreamReadLite */
        WorkstreamReadLite: {
            /**
             * Title
             * @default Untitled
             */
            title: string;
            /** Use Case */
            use_case?: string | null;
            /** Challenge */
            challenge?: string | null;
            /** Technologies */
            technologies?: string[] | null;
            /** Overall Recommendation */
            overall_recommendation?: string | null;
            /** Id */
            id: number;
            /**
             * Create Date
             * Format: date
             */
            create_date: string;
            /**
             * Evaluations
             * @default []
             */
            evaluations: components["schemas"]["EvaluationReadWithStartupLite"][];
        };
        /** WorkstreamStartupEvaluation */
        WorkstreamStartupEvaluation: {
            /** Competitive Advantage */
            competitive_advantage?: string | null;
            /** Risks */
            risks?: string | null;
            /** Collaboration Potential */
            collaboration_potential?: string | null;
            /** Workstream Id */
            workstream_id: number;
            /** Startup Id */
            startup_id: number;
        };
        /** WorkstreamStartupEvaluationUpdate */
        WorkstreamStartupEvaluationUpdate: {
            /** Competitive Advantage */
            competitive_advantage?: string | null;
            /** Risks */
            risks?: string | null;
            /** Collaboration Potential */
            collaboration_potential?: string | null;
        };
        /** WorkstreamUpsert */
        WorkstreamUpsert: {
            /**
             * Title
             * @default Untitled
             */
            title: string;
            /** Use Case */
            use_case?: string | null;
            /** Challenge */
            challenge?: string | null;
            /** Technologies */
            technologies?: string[] | null;
            /** Overall Recommendation */
            overall_recommendation?: string | null;
            /** Startup Ids */
            startup_ids?: number[];
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    list_startups_startups__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["StartupReadLite"][];
                };
            };
        };
    };
    delete_item_startups__delete: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": number[];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        [key: string]: unknown;
                    };
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_startup_by_id_startups_by_id__startup_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                startup_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["StartupReadLite"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_startup_by_website_startups_by_website_get: {
        parameters: {
            query: {
                lookup_url: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Startup"] | null;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_startup_by_id_startups__startup_id__put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                startup_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["StartupUpsert"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["StartupReadLite"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    list_workstreams_workstreams__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["WorkstreamReadLite"][];
                };
            };
        };
    };
    create_workstream_workstreams__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["WorkstreamUpsert"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["WorkstreamReadLite"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_workstream_workstreams__delete: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": number[];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        [key: string]: unknown;
                    };
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_workstream_workstreams__workstream_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                workstream_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["WorkstreamRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_workstream_workstreams__workstream_id__put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                workstream_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["WorkstreamUpsert"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["WorkstreamRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    list_evaluations_evaluations__get: {
        parameters: {
            query?: {
                workstream_id?: number | null;
                startup_id?: number | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["WorkstreamStartupEvaluation"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_evaluation_evaluations__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["WorkstreamStartupEvaluation"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["WorkstreamStartupEvaluation"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_evaluations_bulk_evaluations__workstream_id__post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                workstream_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": number[];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["WorkstreamRead"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_evaluations_bulk_evaluations__workstream_id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                workstream_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": number[];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        [key: string]: unknown;
                    };
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    upsert_evaluations_evaluations__workstream_id___startup_id__put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                workstream_id: number;
                startup_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["WorkstreamStartupEvaluationUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EvaluationReadWithStartup"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    check_url_lookup_check_url_get: {
        parameters: {
            query: {
                url: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CheckDomainResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    lookup_startup_lookup_query_llm_get: {
        parameters: {
            query: {
                startup_url: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Startup"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    suggest_from_use_case_analyse_suggest_from_use_case_get: {
        parameters: {
            query: {
                use_case: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SuggestWorkstreamResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
}
