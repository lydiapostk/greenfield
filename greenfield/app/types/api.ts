/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/startups/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Startups */
        get: operations["list_startups_startups__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/startups/fetch/by_id": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Startup By Id */
        get: operations["get_startup_by_id_startups_fetch_by_id_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/startups/fetch/by_website": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Startup By Website */
        get: operations["get_startup_by_website_startups_fetch_by_website_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/startups/update/by_id": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Update Startup By Id */
        post: operations["update_startup_by_id_startups_update_by_id_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/lookup/check_url": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Check Url
         * @description Validate URL, prefer root domain but fallback to www if needed.
         */
        get: operations["check_url_lookup_check_url_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/lookup/query_llm": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Lookup Startup */
        get: operations["lookup_startup_lookup_query_llm_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** CheckDomainResponse */
        CheckDomainResponse: {
            /** Exists */
            exists: boolean;
            /** Normalized */
            normalized?: string | null;
            /** Error */
            error?: string | null;
            /** Note */
            note?: string | null;
            /** Hostname */
            hostname?: string | null;
        };
        Founders: {
            [key: string]: string;
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /** Startup */
        Startup: {
            /** Company Name */
            company_name: string;
            /** Company Website */
            company_website?: string | null;
            /** Year Founded */
            year_founded?: string | null;
            /** Country */
            country?: string | null;
            /** Num Employees */
            num_employees?: string | null;
            founders?: components["schemas"]["Founders"] | null;
            /** Investors */
            investors?: string[] | null;
            /** Funding Stage */
            funding_stage?: string | null;
            /** Funds Raised */
            funds_raised?: string | null;
            /** Ref Funding */
            ref_funding?: string[] | null;
            /** Tech Offering */
            tech_offering?: string | null;
            /** Ref Tech */
            ref_tech?: string[] | null;
            /** Tech Embedding */
            tech_embedding?: number[] | null;
            /** Uvp */
            uvp?: string | null;
            /** Ref Uvp */
            ref_uvp?: string[] | null;
            /** Uvp Embedding */
            uvp_embedding?: number[] | null;
            /** Trl */
            trl?: string | null;
            /** Trl Explanation */
            trl_explanation?: string | null;
            /** Id */
            id?: number | null;
        };
        /** StartupUpdate */
        StartupUpdate: {
            /** Company Name */
            company_name?: string | null;
            /** Company Website */
            company_website?: string | null;
            /** Year Founded */
            year_founded?: string | null;
            /** Country */
            country?: string | null;
            /** Num Employees */
            num_employees?: string | null;
            founders?: components["schemas"]["Founders"] | null;
            /** Investors */
            investors?: string[] | null;
            /** Funding Stage */
            funding_stage?: string | null;
            /** Funds Raised */
            funds_raised?: string | null;
            /** Ref Funding */
            ref_funding?: string[] | null;
            /** Tech Offering */
            tech_offering?: string | null;
            /** Ref Tech */
            ref_tech?: string[] | null;
            /** Tech Embedding */
            tech_embedding?: number[] | null;
            /** Uvp */
            uvp?: string | null;
            /** Ref Uvp */
            ref_uvp?: string[] | null;
            /** Uvp Embedding */
            uvp_embedding?: number[] | null;
            /** Trl */
            trl?: string | null;
            /** Trl Explanation */
            trl_explanation?: string | null;
            /** Id */
            id?: number;
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    list_startups_startups__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Startup"][];
                };
            };
        };
    };
    get_startup_by_id_startups_fetch_by_id_get: {
        parameters: {
            query: {
                id: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Startup"] | null;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_startup_by_website_startups_fetch_by_website_get: {
        parameters: {
            query: {
                lookup_url: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Startup"] | null;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_startup_by_id_startups_update_by_id_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["StartupUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Startup"] | null;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    check_url_lookup_check_url_get: {
        parameters: {
            query: {
                url: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CheckDomainResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    lookup_startup_lookup_query_llm_get: {
        parameters: {
            query: {
                startup_url: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Startup"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
}
